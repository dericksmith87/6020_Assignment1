Work on expressing yourself accurately, both in words and in formulae, and get to the bottom of things that do not work as expected. 75/100.

General: work on your math notation and the accuracy of your explanations. For instance, the definition of the random vector under d) for Q2 does not make sense. The whole point of mathematical notation is to be precise. An example of inaccurate formulation is "Because polynomials, and their derivatives, have "local" critical points relative to an infinite domain." What do you mean by critical point? Why local? Why is local between quotation marks? Read what you wrote to a peer and ask if they get the point. Or read it to yourself, for that matter. Don't use footnotes unless you really have to  and, if you do, never inside a system of equations. Always use text fonts for words like "sin" and "cos" that appear in a math environment in LaTeX. They are usually available as $\sin$, $\cos$ and so on. Conversely, always use math fonts for in-text math, like "... a discrete grid of $f$ has ..."

Q1: "First using cholesky decomposition ..." That is not a Cholesky decomposition. That one is $L L^t$ and does not have the matrix $P$. Be careful what you call "verified experimentally". Verified means checked for correctness. That is only possible if there are finitely many possibilities to check and you checked all of them. You can get inspiration from some experiments with numerical values for matrix entries and matrices of certain fixed size, but not verify correctness. That you have to do a postiori, by hand or with a program like Maple that can handle symbolic manipulation. 

Q2: 
* "the Newton-like method was scrapped so it requires no exception handling" Why not? The regular Newton iteration inside the optimization function can also fail to converge. What happend if it does? 
* "Trying to log-scale negative values." Why not catch this, or avoid it explicitly by making sure only positive quantities (like residuals) are displayed on a logarithmic scale?
* "a value error inside a few layers of python libraries" It is very important that you find out that value error and why it arises. This is precisely the type of error that comes back to haunt you if you do not deal with it as soon as it arises. Usually, you will find that a bad value (e.g. a NaN) propagates and triggers an error in a deeper layer. You must then find out why it arises.
* "findXzero() seemed to accelerate things quite a bit in the file" Explain here what this function does. Also, "quite a bit" is not helpful.
* "For the other files, as discussed in class, creating a multidimensional discrete grid of f has large space and time complexities." What other files? What is a "grid of f"? To be honest, I do not understand what you are saying in the paragraph starting with "For improvements ..."
