#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Assignment One
\end_layout

\begin_layout Standard
MCSC 6020G
\end_layout

\begin_layout Standard
Fall 2019
\end_layout

\begin_layout Standard
Submitted by Derick Smith
\end_layout

\begin_layout Part*
Question One:
\end_layout

\begin_layout Section*
Skew-symmetric Matrix B, 
\begin_inset Formula $B^{T}=-B$
\end_inset

.
\end_layout

\begin_layout Section*
a) Example 4x4.
\end_layout

\begin_layout Paragraph*
\begin_inset Formula 
\[
B=\left[\begin{array}{cccc}
0 & -1 & 2 & -3\\
1 & 0 & -4 & 5\\
-2 & 4 & 0 & 6\\
3 & -5 & 6 & 0
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Paragraph*
\begin_inset Formula 
\[
-B=\left[\begin{array}{cccc}
0 & 1 & -2 & 3\\
-1 & 0 & 4 & -5\\
2 & -4 & 0 & 6\\
-3 & 5 & -6 & 0
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Paragraph*
\begin_inset Formula 
\[
(-B)^{T}=\left[\begin{array}{cccc}
0 & -1 & 2 & -3\\
1 & 0 & -4 & 5\\
-2 & 4 & 0 & 6\\
3 & -5 & 6 & 0
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Section*
b) Show Orthogonality of 
\begin_inset Formula $A=(\mathbb{I}+B)(\mathbb{I}-B)^{-1}$
\end_inset

 with 
\begin_inset Formula $B$
\end_inset

 skew-symmetrix.
\end_layout

\begin_layout Standard
\begin_inset Formula $A:=(I+B)(I-B)^{-1}$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Inverse of A:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{alignat*}{2}
A^{-1} & = &  & \left[(I+B)(I-B)^{-1}\right]^{-1}\\
 & = &  & (I-B)(I+B)^{-1}
\end{alignat*}

\end_inset


\end_layout

\begin_layout Standard
Transpose of A:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{alignat*}{2}
A^{T} & = &  & \left[(I+B)(I-B)^{-1}\right]^{T}\\
 & = &  & \left[(I-B)^{T}\right]^{-1}(I+B)^{T}\\
 & = &  & (I+B)^{-1}(I-B)
\end{alignat*}

\end_inset


\end_layout

\begin_layout Standard
Inverse of Transpose of A:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{alignat*}{2}
\left[A^{T}\right]^{-1} & = &  & \left[(I+B)^{-1}(I-B)\right]^{-1}\\
 & = &  & (I-B)^{-1}(I+B)\\
 & = &  & A
\end{alignat*}

\end_inset


\end_layout

\begin_layout Standard
Transpose of A dot A:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{alignat*}{2}
A^{T}A & = &  & (I+B)^{-1}(I-B)(I-B)^{-1}(I+B)\\
 & = &  & (I+B)^{-1}(I)(I+B)\\
 & = &  & (I+B)^{-1}(I+B)\\
 & = &  & I
\end{alignat*}

\end_inset


\end_layout

\begin_layout Part*
Question Two:
\end_layout

\begin_layout Subsection*
Prove 
\begin_inset Formula $\frac{1}{n}\left\Vert v\right\Vert _{1}\leq\left\Vert v\right\Vert _{\infty}\leq\left\Vert v\right\Vert _{2}$
\end_inset

, 
\begin_inset Formula $v\in\mathbb{C^{\text{n}}}$
\end_inset

:
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $\forall k$
\end_inset

, 
\begin_inset Formula $v_{k}=a_{k}+b_{k}i$
\end_inset

, where, 
\begin_inset Formula $\{a_{k},b_{k}\}\in\mathbb{R}$
\end_inset

,
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection*
and 
\begin_inset Formula $\left|v_{k}\right|=\left[\overline{v}_{k}\cdot v_{k}\right]^{\frac{1}{2}}=\left[(a_{k}-b_{k}i)\cdot(a_{k}+b_{k}i)\right]^{\frac{1}{2}}=\left(a_{k}^{2}+b_{k}^{2}\right)^{\frac{1}{2}}$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection*
Prove 
\begin_inset Formula $\frac{1}{n}\left\Vert v\right\Vert _{1}\leq\left\Vert v\right\Vert _{\infty}$
\end_inset

:
\end_layout

\begin_layout Standard
With 
\begin_inset Formula $\left\Vert v\right\Vert _{\infty}=\underset{\forall k}{max}\left|v_{k}\right|$
\end_inset

 choose 
\begin_inset Formula $k=1$
\end_inset

 so 
\begin_inset Formula $\left\Vert v\right\Vert _{\infty}=\left|v_{1}\right|=\left(a_{1}^{2}+b_{1}^{2}\right)^{\frac{1}{2}}$
\end_inset

,
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
where, 
\begin_inset Formula $\forall k$
\end_inset

, 
\begin_inset Formula $\left(a_{k}^{2}+b_{k}^{2}\right)^{\frac{1}{2}}\leq\left(a_{1}^{2}+b_{1}^{2}\right)^{\frac{1}{2}}$
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{alignat*}{2}
\left(a_{1}^{2}+b_{1}^{2}\right)^{\frac{1}{2}} & \leq &  & \left(a_{1}^{2}+b_{1}^{2}\right)^{\frac{1}{2}}\\
\left(a_{1}^{2}+b_{1}^{2}\right)^{\frac{1}{2}}+\left(a_{2}^{2}+b_{2}^{2}\right)^{\frac{1}{2}} & \leq &  & 2\cdot\left(a_{1}^{2}+b_{1}^{2}\right)^{\frac{1}{2}}\\
 & \vdots\\
\sum_{k=1}^{n}\left(a_{k}^{2}+b_{k}^{2}\right)^{\frac{1}{2}} & \leq &  & n\cdot\left(a_{1}^{2}+b_{1}^{2}\right)^{\frac{1}{2}}\\
\frac{1}{n}\sum_{k=1}^{n}\left(a_{k}^{2}+b_{k}^{2}\right)^{\frac{1}{2}} & \leq &  & \left(a_{1}^{2}+b_{1}^{2}\right)^{\frac{1}{2}}\\
\\
\\
\frac{1}{n}\left\Vert v\right\Vert _{1} & \leq &  & \left\Vert v\right\Vert _{\infty}.
\end{alignat*}

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset Newpage newpage
\end_inset

Prove 
\begin_inset Formula $\left\Vert v\right\Vert _{\infty}\leq\left\Vert v\right\Vert _{2}$
\end_inset

:
\end_layout

\begin_layout Standard
With 
\begin_inset Formula $\left\Vert v\right\Vert _{\infty}=\underset{\forall k}{max}\left|v_{k}\right|$
\end_inset

 choose 
\begin_inset Formula $k=1$
\end_inset

 so 
\begin_inset Formula $\left\Vert v\right\Vert _{\infty}=\left|v_{1}\right|=\left(a_{1}^{2}+b_{1}^{2}\right)^{\frac{1}{2}}$
\end_inset

,
\end_layout

\begin_layout Standard
and 
\begin_inset Formula $\left\Vert v\right\Vert _{2}=\left[\sum_{k=1}^{n}\left(\overline{v}_{k}\cdot v_{k}\right)\right]^{\frac{1}{2}}=\left[\sum_{k=1}^{n}\left(a_{k}^{2}+b_{k}^{2}\right)\right]^{\frac{1}{2}}$
\end_inset

,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{alignat*}{3}
0 &  & \le &  &  & \sum_{k=2}^{n}\left(a_{k}^{2}+b_{k}^{2}\right)\\
0 &  & \le &  &  & \left[\sum_{k=2}^{n}\left(a_{k}^{2}+b_{k}^{2}\right)\right]+\left(a_{1}^{2}+b_{1}^{2}\right)-\left(a_{1}^{2}+b_{1}^{2}\right)\\
0 &  & \le &  &  & \left[\sum_{k=1}^{n}\left(a_{k}^{2}+b_{k}^{2}\right)\right]-\left(a_{1}^{2}+b_{1}^{2}\right)\\
\left(a_{1}^{2}+b_{1}^{2}\right) &  & \leq &  &  & \sum_{k=1}^{n}\left(a_{k}^{2}+b_{k}^{2}\right)\\
\left(a_{1}^{2}+b_{1}^{2}\right)^{\frac{1}{2}} &  & \leq &  &  & \left[\sum_{k=1}^{n}\left(a_{k}^{2}+b_{k}^{2}\right)\right]^{\frac{1}{2}}\\
\\
\\
\left\Vert v\right\Vert _{\infty} &  & \leq &  &  & \left\Vert v\right\Vert _{2}.
\end{alignat*}

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Therefore,
\end_layout

\begin_layout Subsection*
\begin_inset Formula 
\[
\frac{1}{n}\left\Vert v\right\Vert _{1}\leq\left\Vert v\right\Vert _{\infty}\leq\left\Vert v\right\Vert _{2}.\qquad\qquad\qquad\qquad\qquad\Square
\]

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newpage newpage
\end_inset

Example:
\end_layout

\begin_layout Standard
\begin_inset Formula $v=\left\{ (1+2i),(3+4i),(5+6i)\right\} $
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

For 
\begin_inset Formula $\frac{1}{n}\left\Vert v\right\Vert _{1}\leq\left\Vert v\right\Vert _{\infty}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{alignat*}{2}
\frac{1}{3}\left(\left[(1-2i)(1+2i)\right]^{\frac{1}{2}}+\left[(3-4i)(3+4i)\right]^{\frac{1}{2}}+\left[(5-6i)(5+6i)\right]^{\frac{1}{2}}\right) & \leq &  & \left[(5+6i)(5+6i)\right]^{\frac{1}{2}}\\
\frac{1}{3}\left[(1+2^{2})^{\frac{1}{2}}+(3^{3}+4^{2})^{\frac{1}{2}}+(5^{2}+6^{2})^{\frac{1}{2}}\right] & \leq &  & (5^{2}+6^{2})^{\frac{1}{2}}\\
(1+2^{2})^{\frac{1}{2}}+(3^{3}+4^{2})^{\frac{1}{2}}+(5^{2}+6^{2})^{\frac{1}{2}} & \leq &  & 3\cdot(5^{2}+6^{2})^{\frac{1}{2}}\\
(1+2^{2})^{\frac{1}{2}}+(3^{3}+4^{2})^{\frac{1}{2}} & \leq &  & 2\cdot(5^{2}+6^{2})^{\frac{1}{2}}.
\end{alignat*}

\end_inset


\begin_inset Newline newline
\end_inset

For 
\begin_inset Formula $\left\Vert v\right\Vert _{\infty}\leq\left\Vert v\right\Vert _{2}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{alignat*}{2}
\left[(5+6i)(5+6i)\right]^{\frac{1}{2}} & \leq &  & \left[(1-2i)(1+2i)+(3-4i)(3+4i)+(5-6i)(5+6i)\right]^{\frac{1}{2}}\\
(5^{2}+6^{2})^{\frac{1}{2}} & \leq &  & \left[(1+2^{2})+(3^{3}+4^{2})+(5^{2}+6^{2})\right]^{\frac{1}{2}}\\
(5^{2}+6^{2}) & \leq &  & (1+2^{2})+(3^{3}+4^{2})+(5^{2}+6^{2})\\
0 & \leq &  & (1+2^{2})+(3^{3}+4^{2}).
\end{alignat*}

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Part*
\begin_inset Newpage newpage
\end_inset

Question Three:
\end_layout

\begin_layout Subsection*
(a) How to Compute det(A) from LUP Factorization.
\end_layout

\begin_layout Standard
The determinant of A can be found by the product of the determinants of
 its decomposed matrices, i.e.
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
PA=LU
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
A=P^{-1}LU
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
det(A)=det(P^{-1})\cdot det(L)\cdot det(U).
\]

\end_inset


\end_layout

\begin_layout Subsection*
(b) LUP det(A) Pseudo-code.
\end_layout

\begin_layout Standard
Matrix A = mxA has dimensions n by n.
 Matrix U = mxU deep copy of mxA.
 Matrix L = mxL is n by n identity matrix.
 
\end_layout

\begin_layout Itemize
pSwaps = 0 # used for determinant of P
\end_layout

\begin_layout Itemize
i = 0 # outer loop counter
\end_layout

\begin_layout Itemize
While i < (n-1):
\end_layout

\begin_deeper
\begin_layout Itemize
Search mxU for row with largest nonzero absolute leading element for ith
 column
\end_layout

\begin_layout Itemize
If larger than current ith row:
\end_layout

\begin_deeper
\begin_layout Itemize
Swap those rows
\end_layout

\begin_layout Itemize
pSwaps++
\end_layout

\end_deeper
\begin_layout Itemize
l = i + 1 # inner loop counter
\end_layout

\begin_layout Itemize
While l < n:
\end_layout

\begin_deeper
\begin_layout Itemize
mxL[l, i] = mxU[l, i] / mxU[i, i] 
\end_layout

\begin_layout Itemize
mxU[l,] = mxU[l,] - mxL[l, i] * mxU[i,]
\end_layout

\begin_layout Itemize
l++
\end_layout

\end_deeper
\begin_layout Itemize
i++
\end_layout

\end_deeper
\begin_layout Itemize
i = 0 # reset counter
\end_layout

\begin_layout Itemize
mxAdet = (-1)^pSwaps # this is equivalent to det(P^-1)
\end_layout

\begin_layout Itemize
While i < n:
\end_layout

\begin_deeper
\begin_layout Itemize
mxDetA = mxDetA * mxU[i,i]
\end_layout

\begin_layout Itemize
i++
\end_layout

\end_deeper
\begin_layout Itemize
Return mxDetA
\end_layout

\begin_layout Subsection*
(c) CoFactor det(A) Pseudo-code.
\end_layout

\begin_layout Standard
Matrix A = mxA has dimensions n by n.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Define function CofactorDet(mx):
\end_layout

\begin_layout Itemize
n = length of mx
\end_layout

\begin_layout Itemize
If n == 1: return mx[0,0]
\end_layout

\begin_layout Itemize
If n==2: return mx[0, 0] * mx[1, 1] - mx[1, 0] * mx[0, 1]
\end_layout

\begin_layout Itemize
mxDet = 0 # to be accumulated throughout regressive algorithm
\end_layout

\begin_layout Itemize
i = 0 # loop counter
\end_layout

\begin_layout Itemize
While i < n:
\end_layout

\begin_deeper
\begin_layout Itemize
tempMx = mx - ith row - ith column
\begin_inset Newline newline
\end_inset

# temporary matrix cofactor 
\end_layout

\begin_layout Itemize
mxDet = MxDet + (-1)^(i) * mx[i,0] * CofactorDet(tempMx) 
\begin_inset Newline newline
\end_inset

# recursive call
\end_layout

\end_deeper
\begin_layout Itemize
return mxDet
\end_layout

\begin_layout Subsection*
(d) Test Algorithms for Time and Error.
\end_layout

\begin_layout Standard
Notes: 
\end_layout

\begin_layout Enumerate
See files for scripts.
 
\end_layout

\begin_layout Enumerate
Both methods errors were calculated individually compared to their difference
 (absolute and relative) to Python's Numpy linear algebra function det().
\end_layout

\begin_layout Enumerate
Python standard library function time.clock() was tracked before and after
 each method call, including Python's det().
\end_layout

\begin_layout Enumerate
Each method was computed 50 times at each dimension, from n=2 to n=11.
 Their mean and standard deviation for time and error were then computed
 for analysis.
\end_layout

\begin_layout Enumerate
Testing beyond n=11 was not feasible without a more powerful computer.
 The CoFactor recursive method processing time is not polynomial.
\end_layout

\begin_layout Subsubsection*
\begin_inset Newpage newpage
\end_inset

(i) LUP Method.
\end_layout

\begin_layout Paragraph*
Time:
\end_layout

\begin_layout Subparagraph*
The time taken by the LUP method was super linearly with the increase in
 matrix dimension.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Table 1: LUP Det(mxA) Time
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{ccccc}
\text{n} & \quad & \mu & \quad & \sigma\\
2 &  & 7.7608\cdot10^{-4} &  & 1.367747\cdot10^{-4}\\
3 &  & 7.3372\cdot10^{-4} &  & 8.63071352786121\cdot10^{-5}\\
4 &  & 7.8406\cdot10^{-4} &  & 1.332449\cdot10^{-4}\\
5 &  & 7.7188\cdot10^{-4} &  & 4.85240723765062\cdot10^{-5}\\
6 &  & 7.8668\cdot10^{-4} &  & 2.79295112739264\cdot10^{-5}\\
7 &  & 8.4252\cdot10^{-4} &  & 3.6811\cdot10^{-5}\\
8 &  & 9.5012\cdot10^{-4} &  & 1.048978\cdot10^{-4}\\
9 &  & 9.6452\cdot10^{-4} &  & 3.21124524130671\cdot10^{-5}\\
10 &  & 1.03284\cdot10^{-3} &  & 1.147178\cdot10^{-4}\\
11 &  & 1.08\cdot10^{-3} &  & 1.997\cdot10^{-4}
\end{array}
\]

\end_inset


\end_layout

\begin_layout Subparagraph
Plot 1: LUP Det(mA) Log(Time)
\end_layout

\begin_layout Subparagraph*
\begin_inset Graphics
	filename LUP_TimePerN.png
	scale 50

\end_inset


\end_layout

\begin_layout Paragraph*
\begin_inset Newpage newpage
\end_inset

Error:
\end_layout

\begin_layout Subparagraph*
Table 2: LUP Det(mxA) Error
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{ccccc}
\text{n} & \quad & \mu & \quad & \sigma\\
2 &  & 1.50272219720192\cdot10^{-16} &  & 1.68254760626659\cdot10^{-16}\\
3 &  & 1.41076335325028\cdot10^{-15} &  & 3.59600036074122\cdot10^{-15}\\
4 &  & 6.62001749035301\cdot10^{-16} &  & 1.13693313632224\cdot10^{-15}\\
5 &  & 1.40118844089626\cdot10^{-15} &  & 3.33296631257066\cdot10^{-15}\\
6 &  & 1.59773540700325\cdot10^{-15} &  & 2.77370625824385\cdot10^{-15}\\
7 &  & 2.80480124651704\cdot10^{-15} &  & 7.6498009965789\cdot10^{-15}\\
8 &  & 2.41997718548759\cdot10^{-15} &  & 4.18019888960937\cdot10^{-15}\\
9 &  & 3.42766999183274\cdot10^{-15} &  & 4.74788735226157\cdot10^{-15}\\
10 &  & 6.57323839705876\cdot10^{-15} &  & 2.43972206315903\cdot10^{-14}\\
11 &  & 1.50681037874643\cdot10^{-14} &  & 6.6924959307498\cdot10^{-14}
\end{array}
\]

\end_inset


\end_layout

\begin_layout Subparagraph*
Plot 2: LUP Det(mA) Log(Error)
\end_layout

\begin_layout Subparagraph*
\begin_inset Graphics
	filename LUP_ErrorPerN.png
	scale 50

\end_inset


\end_layout

\begin_layout Subsubsection*
\begin_inset Newpage newpage
\end_inset

(ii) CoFactor Method.
\end_layout

\begin_layout Paragraph*
Time:
\end_layout

\begin_layout Subparagraph*
The time taken by the CoFactor method was super linearly with the increase
 in matrix dimension.
 Significantly greater than that of the LUP method.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Table 3: CoFactor Det(mxA) Time
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{ccccc}
\text{n} & \quad & \mu & \quad & \sigma\\
2 &  & 1.92599999999983\cdot10^{-4} &  & 1.35262707351354\cdot10^{-5}\\
3 &  & 2.09400000000004\cdot10^{-4} &  & 5.88897274575044\cdot10^{-6}\\
4 &  & 2.82459999999993\cdot10^{-4} &  & 3.15412174780973\cdot10^{-5}\\
5 &  & 5.65819999999988\cdot10^{-4} &  & 1.04741395828176\cdot10^{-5}\\
6 &  & 2.39327999999998\cdot10^{-3} &  & 1.22689044335656\cdot10^{-4}\\
7 &  & 1.511576\cdot10^{-2} &  & 2.03081713603174\cdot10^{-4}\\
8 &  & 1.2063036\cdot10^{-1} &  & 8.22970832046882\cdot10^{-4}\\
9 &  & 1.09444122 &  & 1.70025335268485\cdot10^{-2}\\
10 &  & 1.075855772\cdot10 &  & 1.55878988870087\cdot10^{-1}\\
11 &  & 1.178086217\cdot10^{2} &  & 1.70881036448183
\end{array}
\]

\end_inset


\end_layout

\begin_layout Subparagraph
Plot 3: CoFactor Det(mA) Log(Time)
\end_layout

\begin_layout Subparagraph*
\begin_inset Graphics
	filename CoFactor_TimePerN.png
	scale 50

\end_inset


\end_layout

\begin_layout Paragraph*
\begin_inset Newpage newpage
\end_inset

Error:
\end_layout

\begin_layout Subparagraph
Table 4: CoFactor Det(mxA) Error
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{ccccc}
\text{n} & \quad & \mu & \quad & \sigma\\
2 &  & 1.74415463563628\cdot10^{-16} &  & 1.86552669289415\cdot10^{-16}\\
3 &  & 9.48439476322332\cdot10^{-16} &  & 2.40923167145667\cdot10^{-15}\\
4 &  & 6.81226180835024\cdot10^{-16} &  & 1.39005207862167\cdot10^{-15}\\
5 &  & 1.90477954432557\cdot10^{-15} &  & 4.11598371212702\cdot10^{-15}\\
6 &  & 3.22487255952488\cdot10^{-15} &  & 1.08645960672825\cdot10^{-14}\\
7 &  & 2.87690455913454\cdot10^{-15} &  & 8.44074884558458\cdot10^{-15}\\
8 &  & 4.42657293356288\cdot10^{-15} &  & 1.17148268098084\cdot10^{-14}\\
9 &  & 9.81864615141008\cdot10^{-15} &  & 2.05052323312052\cdot10^{-14}\\
10 &  & 9.31015858251381\cdot10^{-15} &  & 3.46051259145651\cdot10^{-14}\\
11 &  & 1.33660410213406\cdot10^{-14} &  & 2.81812201167862\cdot10^{-14}
\end{array}
\]

\end_inset


\end_layout

\begin_layout Subparagraph*
Plot 4: CoFactor Det(mA) Log(Error)
\end_layout

\begin_layout Subparagraph*
\begin_inset Graphics
	filename CoFactor_ErrorPerN.png
	scale 50

\end_inset


\end_layout

\begin_layout Subsubsection*
\begin_inset Newpage newpage
\end_inset

(iii) Numpy det() Method.
\end_layout

\begin_layout Standard
Note: Error is not provided as this method was used as the measuring stick
 which the others were compared with.
\end_layout

\begin_layout Paragraph*
Time:
\end_layout

\begin_layout Subparagraph*
The time taken for Python's Numpy library was significantly less than both
 of the other methods.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Table 5: Numpy det(mxA) Time
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{ccccc}
\text{n} & \quad & \mu & \quad & \sigma\\
2 &  & 2.02980000000008\cdot10^{-4} &  & 1.04335804017675\cdot10^{-5}\\
3 &  & 1.95579999999986\cdot10^{-4} &  & 8.66507934181306\cdot10^{-6}\\
4 &  & 2.03359999999986\cdot10^{-4} &  & 1.76269793214748\cdot10^{-5}\\
5 &  & 1.99019999999988\cdot10^{-4} &  & 8.25709391978144\cdot10^{-6}\\
6 &  & 1.98859999999992\cdot10^{-4} &  & 7.09086736585715\cdot10^{-6}\\
7 &  & 2.07879999999978\cdot10^{-4} &  & 1.07733745873911\cdot10^{-5}\\
8 &  & 2.24959999999932\cdot10^{-4} &  & 7.15251004886503\cdot10^{-6}\\
9 &  & 2.26840000000017\cdot10^{-4} &  & 5.44558536817928\cdot10^{-6}\\
10 &  & 2.29580000000738\cdot10^{-4} &  & 1.46056016684742\cdot10^{-5}\\
11 &  & 2.44439999983115\cdot10^{-4} &  & 6.44574775485059\cdot10^{-5}
\end{array}
\]

\end_inset


\end_layout

\begin_layout Subparagraph*
Plot 5: Numpy det(mA) Log(Time)
\end_layout

\begin_layout Subparagraph
\begin_inset Graphics
	filename LUP(py)_TimePerN.png
	scale 50

\end_inset


\end_layout

\begin_layout Subsection*
(e) Time Complexities.
\end_layout

\begin_layout Subsubsection*
(i) LUP Method Time Complexity.
\end_layout

\begin_layout Standard
As discussed in lecture the time complexity of 
\begin_inset Formula $O(n^{3})$
\end_inset

.
 Flops of the Python script for this method are annotated in the comments.
\end_layout

\begin_layout Subparagraph*
Time Complexity Calculation:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{alignat*}{2}
T(n) &  & = & n+\sum_{i=1}^{n-1}\left(n-1+6n+\sum_{k=1}^{i}\left(n+1\right)\right)\\
 &  & = & n+\sum_{i=1}^{n-1}\left(7n-1+\left(n+1\right)\cdot\sum_{k=1}^{i}1\right)\\
 &  & = & n+\sum_{i=1}^{n-1}\left(7n-1+\left(n+1\right)\cdot i\right)\\
 &  & = & n+(n-1)(7n-1)+\left(n+1\right)\cdot\sum_{i=1}^{n-1}i\\
 &  & = & n+7n^{2}-8n+1+(n+1)\left(\dfrac{(n-1)(n-2)}{2}\right)\\
 &  & = & 7n^{2}-7n+1+(n+1)\left(\dfrac{n^{2}-3n+2}{2}\right)\\
 &  & = & 7n^{2}-7n+1+\left(\dfrac{n^{3}-3n^{2}-n+2}{2}\right)\\
 &  & = & \frac{1}{2}\left(n^{3}+11n^{2}-15n+4\right)\\
 &  & = & O(n^{3})
\end{alignat*}

\end_inset


\end_layout

\begin_layout Subsubsection*
\begin_inset Newpage newpage
\end_inset

(ii) CoFactor Method Time Complexity.
\end_layout

\begin_layout Standard
Flops of the Python script for this method are annotated in the comments.
\end_layout

\begin_layout Subparagraph*
Time Complexity Calculation:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{alignat*}{2}
T(n) &  & = & \sum_{i=1}^{n}\left(\sum_{i=1}^{n-1}\left(\cdots\left(\sum_{i=1}^{2}\left(\sum_{i=1}^{1}\left(4\right)\right)\right)\cdots\right)\right)\\
 &  & = & 4\cdot\sum_{i=1}^{n}\left(\sum_{i=1}^{n-1}\left(\cdots\left(\sum_{i=1}^{2}\left(\sum_{i=1}^{1}\left(1\right)\right)\right)\cdots\right)\right)\\
 &  & = & 4\cdot\prod_{i}^{n}\left(1\right)\\
 &  & = & 4n!\\
 &  & = & O(n!)
\end{alignat*}

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
This does verify that the datasets and graphs make sense per method.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsubsection*
(iii) Accuracy.
\end_layout

\begin_layout Standard
From Table 2, Plot 2, Table 4, and Plot 4, there does not appear to be a
 substantial difference between the two methods levels of accuracy.
 At each dimension each methods average relative errors are within the others
 mean plus or minus three standard deviations.
 Without more rigorous analysis, it does appear likely that it would fail
 to reject the null hypothesis test that 
\begin_inset Formula $\mu_{lup}=\mu_{co}$
\end_inset

.
 That being said, neither seems to be significantly more accurate than the
 other.
\end_layout

\end_body
\end_document
